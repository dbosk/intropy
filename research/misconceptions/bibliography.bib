@book{NCOL,
  title={Necessary conditions of learning},
  author={Marton, Ference},
  year={2014},
  publisher={Routledge}
}
@article{MisconceptionsSurvey2017,
  author = {Qian, Yizhou and Lehman, James},
  title = {Students’ Misconceptions and Other Difficulties in Introductory 
           Programming: A Literature Review},
  year = {2017},
  issue_date = {March 2018},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {18},
  number = {1},
  url = {https://doi.org/10.1145/3077618},
  doi = {10.1145/3077618},
  abstract = {Efforts to improve computer science education are underway, and 
              teachers of computer science are challenged in introductory 
              programming courses to help learners develop their understanding 
              of programming and computer science. Identifying and addressing 
              students’ misconceptions is a key part of a computer science 
              teacher's competence. However, relevant research on this topic is 
              not as fully developed in the computer science education field as 
              it is in mathematics and science education. In this article, we 
              first review relevant literature on general definitions of 
              misconceptions and studies about students’ misconceptions and 
              other difficulties in introductory programming. Next, we 
              investigate the factors that contribute to the difficulties. 
              Finally, strategies and tools to address difficulties including 
              misconceptions are discussed.Based on the review of literature, 
              we found that students exhibit various misconceptions and other 
              difficulties in syntactic knowledge, conceptual knowledge, and 
              strategic knowledge. These difficulties experienced by students 
              are related to many factors including unfamiliarity of syntax, 
              natural language, math knowledge, inaccurate mental models, lack 
              of strategies, programming environments, and teachers’ knowledge 
              and instruction. However, many sources of students’ difficulties 
              have connections with students’ prior knowledge. To better 
              understand and address students’ misconceptions and other 
              difficulties, various instructional approaches and tools have 
              been developed. Nevertheless, the dissemination of these 
              approaches and tools has been limited. Thus, first, we suggest 
              enhancing the dissemination of existing tools and approaches and 
              investigating their long-term effects. Second, we recommend that 
              computing education research move beyond documenting 
              misconceptions to address the development of students’ 
              (mis)conceptions by integrating conceptual change theories. 
              Third, we believe that developing and enhancing instructors’ 
              pedagogical content knowledge (PCK), including their knowledge of 
              students’ misconceptions and ability to apply effective 
              instructional approaches and tools to address students’ 
              difficulties, is vital to the success of teaching introductory 
              programming.},
  journal = {ACM Trans. Comput. Educ.},
  month = {10},
  articleno = {1},
  numpages = {24},
  keywords = {introductory programming, difficulties, conceptual change, 
              constructivism, Misconceptions}
}
@mastersthesis{Plass2015Variables,
  title={Identifying and addressing common programming misconceptions with 
         variables (part 1)},
  author={Plass-Oude Bos, Danny},
  year={2015},
  school={University of Twente}
}
@inproceedings{Kohn2017VariableEvaluation,
  author = {Kohn, Tobias},
  title = {Variable Evaluation: An Exploration of Novice Programmers' 
           Understanding and Common Misconceptions},
  year = {2017},
  isbn = {9781450346986},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/3017680.3017724},
  doi = {10.1145/3017680.3017724},
  abstract = {For novice programmers one of the most problematic concepts is 
              variable assignment and evaluation. Several questions emerge in 
              the mind of the beginner, such as what does x = 7 + 4 or x = x + 
              1 really mean? For instance, many students initially think that 
                such statements store the entire calculation in variable x, 
                evaluating the result lazily when actually needed. The common 
                increment pattern x = x + 1 is even believed to be outright 
                impossible. This paper discusses a multi-year project examining 
                how high school students think of assignments and variables. In 
                particular, where does the misconception of storing entire 
                calculations come from? Can we explain the students' thinking 
                and help them develop correct models of how programming 
                works?It is particularly striking that a model of the computer 
                as a machine with algebraic capabilities would indeed produce 
                the observed misconceptions. The misconception might simply be 
                attributed to the expectation that the computer performs 
                computations the exact same way students are taught to in 
                mathematics.},
  booktitle = {Proceedings of the 2017 ACM SIGCSE Technical Symposium on 
               Computer Science Education},
  pages = {345–350},
  numpages = {6},
  keywords = {variables, novices, misconceptions, learning, programming},
  location = {Seattle, Washington, USA},
  series = {SIGCSE '17}
}
@techreport{Sleeman1984,
  author={Sleeman, D and Putnam, R T and Baxter, J A and Kuspa, L K},
  title={Pascal and High-School Students: A Study of Misconceptions},
  year={1984},
  institution={Stanford University, School of Education},
  number={009},
  series={Technology Panel Study of Stanford and the Schools},
  type={Occasional report},
  url={https://files.eric.ed.gov/fulltext/ED258552.pdf}
}
@article{Ragonis2005OOP,
  author = { Noa   Ragonis  and  Mordechai   Ben-Ari },
  title = {A long-term investigation of the comprehension of OOP concepts by novices},
  journal = {Computer Science Education},
  volume = {15},
  number = {3},
  pages = {203-221},
  year  = {2005},
  publisher = {Routledge},
  doi = {10.1080/08993400500224310},
}
@article{hatala2003practice,
  title={Practice makes perfect: the critical role of mixed practice in the 
         acquisition of ECG interpretation skills},
  author={Hatala, Rose M and Brooks, Lee R and Norman, Geoffrey R},
  journal={Advances in Health Sciences Education},
  volume={8},
  number={1},
  pages={17--26},
  year={2003},
  publisher={Springer}
}

